
¡¾3¡¿check async status

setTimeout(function checkStat() {
	if ($weatherUpdated == 1) {
		console.log('Weather: get yahoo weather forecast successfully.');
		tryTimes = 5;
		return;
	} else {
		console.error('Weather: ' + ' times failed to get yahoo weather forecast.');
		if (tryTimes-- > 0) {
			checkStat();
		}
	}
}, 1000);


¡¾2¡¿ajax

$.ajax({
  url: url,
  dataType: 'json',
  data: data,
  success: callback
});


¡¾1¡¿getJSON

	http://stackoverflow.com/questions/1740218/error-handling-in-getjson-calls

$.getJSON() is a kind of abstraction of a regular ajax call where you would have to tell that you want a json encoded response.

$.ajax({
  url: url,
  dataType: 'json',
  data: data,
  success: callback
});



You can handle errors in two ways: generically (by configuring your ajax calls before actually calling them) or specifically (with method chain).

'generic' would be something like:

$.ajaxSetup({
      "error":function() { alert("error");  }
});
And the 'specific' way:

$.getJSON("example.json", function() {
  alert("success");
})
.success(function() { alert("second success"); })
.error(function() { alert("error"); })
.complete(function() { alert("complete"); });